<?xml version="1.0" encoding="UTF-8"?>
<!-- origin at X=0.0 Y=0.0 -->
<bpmn2:definitions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bpmn2="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:ext="http://org.eclipse.bpmn2/ext" xmlns:xs="http://www.w3.org/2001/XMLSchema" id="Definitions_1" exporter="org.eclipse.bpmn2.modeler.core" exporterVersion="1.3.1.Final-v20161006-1425-B58" targetNamespace="http://org.eclipse.bpmn2/default/process">
  <bpmn2:process id="Consulta0101" name="Default Process" isExecutable="false">
    <bpmn2:startEvent id="StartEvent_1" name="Start Event 1">
      <bpmn2:outgoing>SequenceFlow_6</bpmn2:outgoing>
    </bpmn2:startEvent>
    <bpmn2:endEvent id="EndEvent_1" name="End Event 1">
      <bpmn2:incoming>SequenceFlow_9</bpmn2:incoming>
    </bpmn2:endEvent>
    <bpmn2:sequenceFlow id="SequenceFlow_6" sourceRef="StartEvent_1" targetRef="ServiceTask_7"/>
    <bpmn2:scriptTask id="ScriptTask_3" name="ExistQuota">
      <bpmn2:incoming>SequenceFlow_11</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_14</bpmn2:outgoing>
      <bpmn2:script>var STR_PAD_LEFT = 1;

var STR_PAD_RIGHT = 2;

var STR_PAD_BOTH = 3;

var tMensaje = '';

var tMensajeConsumos = '';

var tMensajeApps = '';

var tMensajeTmp = SMS_SUCCESS_CONSULT;

var tMensajeAppTmp = MSG_PAQUETES_APP;

var TextoSMSF = 'Marca #111# para adquirir un nuevo paquete';
var SMS_ILI = ' el [CONSUMIDO]%  de tu [SERVICIO] y lo tienes hasta [FINAL_HORA] del [FINAL_FECHA]';
var SMS_PLAN = ' el [CONSUMIDO]%  de tu [SERVICIO], tienes disponible [BALANCE] hasta [FINAL_FECHA]';
var SMS_RESTO =  ' el [CONSUMIDO]%  de tu [SERVICIO], tienes disponible [BALANCE] hasta [FINAL_HORA] del [FINAL_FECHA]';
var tMensaje = 'Tu numero [CELULAR] ha consumido:';
var tMsjTemp = '';
var tPrimerPaq = false;

var tmpConsumosMsj = 'Tu numero &lt;MSISDN> ha consumido: % Marca #111# o ingresa a www.tigointernet.hn para adquirir un nuevo paquete';
var tmpAppMsj = 'Tu numero &lt;MSISDN> cuenta con los siguientes paquetes ilimtados: % Marca #111# o ingresa a www.tigointernet.hn para adquirir un nuevo paquete';
var tmpMsj = '';
var quotaExpired = false;
var serviceExpired = false;
var quotaFormat = 0;
var foundActive = false;
var quotaPercentage = '';
var endDate = '';
var endDateDia = '';
var endDateTiempo = '';
var actualQuota = 0;
var vProductName = '';
var navInfo = new Object();
var MESSAGE = '';
var vService = '';
var activeApplications = new Array();

if(typeof vJsonData != 'undefined'){
    tMensaje = tMensaje.replace('[CELULAR]',subscriberId);

    navInfo = JSON.parse(vJsonData);

    if(typeof navInfo.services.bundles != 'undefined'){
        for(i = 0; i &lt; navInfo.services.bundles.length; i++){
            if(typeof navInfo.services.bundles[i].packages != 'undefined'){
                if(typeof navInfo.services.bundles[i].packages.active != 'undefined'){
                    if(typeof navInfo.services.bundles[i].packages.active.product_name != 'undefined'){
                        foundActive = true;
                        actualQuota = new Number(navInfo.services.bundles[i].packages.active.qta_balance).toFixed(2);
                        quotaFormat = actualQuota > 1024 ? String((actualQuota / 1024).toFixed(2)) + &quot; GB&quot; : String(actualQuota) + &quot; MB&quot;;
                        quotaPercentage = String(new Number(100 - new Number(navInfo.services.bundles[i].packages.active.qta_percentage)).toFixed(2));
                        vProductName = navInfo.services.bundles[i].packages.active.product_name;
                        endDate = getCbsDateStr(String(navInfo.services.bundles[i].packages.active.service_end));
                        endDateDia = getCbsDateStrDia(String(navInfo.services.bundles[i].packages.active.service_end));
                        endDateTiempo = getCbsDateStrTiempo(String(navInfo.services.bundles[i].packages.active.service_end));

                        tMsjTemp = SMS_RESTO;
                        //tMsjTemp = tMsjTemp.replace('[CELULAR]',  subscriberId);
                        tMsjTemp  = tMsjTemp.replace('[CONSUMIDO]',  quotaPercentage);
                        tMsjTemp  = tMsjTemp.replace('[SERVICIO]', vProductName);
                        tMsjTemp  = tMsjTemp.replace('[BALANCE]', quotaFormat);
                        tMsjTemp  = tMsjTemp.replace('[FINAL_HORA]', endDateTiempo);
                        tMsjTemp  = tMsjTemp.replace('[FINAL_FECHA]', endDateDia);

                        if(!tPrimerPaq) {
                            tMensaje += tMsjTemp;
                            tPrimerPaq = true;     
                        }
                        else {
                            tMensaje += ';' + tMsjTemp;
                        }
                    }
                }
            }

            if(typeof navInfo.services.bundles[i].applications != 'undefined'){
                if(typeof navInfo.services.bundles[i].applications.active != 'undefined'){
                    activeApplications = navInfo.services.bundles[i].applications.active;
                    for( j = 0; j &lt; activeApplications.length; j++){
                        foundActive = true;
                        actualQuota = activeApplications[j].hours_remaining;
                        quotaFormat = actualQuota + &quot; Hrs&quot;;
                        quotaPercentage = String(new Number(100 - new Number(activeApplications[j].hour_percentage)).toFixed(2));
                        vProductName = activeApplications[j].product_name;
                        endDate = getCbsDateStr(String(activeApplications[j].service_end));     
                        endDateDia = getCbsDateStrDia(String(activeApplications[j].service_end));
                        endDateTiempo = getCbsDateStrTiempo(String(activeApplications[j].service_end));                   

                        tMsjTemp = SMS_ILI;
                        tMsjTemp  = tMsjTemp.replace('[CONSUMIDO]',  quotaPercentage);
                        tMsjTemp  = tMsjTemp.replace('[SERVICIO]', vProductName);
                        tMsjTemp  = tMsjTemp.replace('[FINAL_HORA]', endDateTiempo);
                        tMsjTemp  = tMsjTemp.replace('[FINAL_FECHA]', endDateDia);

                        if(!tPrimerPaq) {
                            tMensaje += tMsjTemp;
                            tPrimerPaq = true;     
                        }
                        else {
                            tMensaje += ';' + tMsjTemp;
                        }
                    }
                }
            }
        }
    }

    if(typeof navInfo.services.packages != 'undefined'){
        if(typeof navInfo.services.packages.active != 'undefined'){
            if(typeof navInfo.services.packages.active.product_name != 'undefined'){
                foundActive = true;
                actualQuota = new Number(navInfo.services.packages.active.qta_balance).toFixed(2);
                quotaFormat = actualQuota > 1024 ? String((actualQuota / 1024).toFixed(2)) + &quot; GB&quot; : String(actualQuota) + &quot; MB&quot;;
                quotaPercentage = String(new Number(100 - new Number(navInfo.services.packages.active.qta_percentage)).toFixed(2));
                vProductName = navInfo.services.packages.active.product_name;
                endDate = getCbsDateStr(String(navInfo.services.packages.active.service_end));
                endDateDia = getCbsDateStrDia(String(navInfo.services.packages.active.service_end));
                endDateTiempo = getCbsDateStrTiempo(String(navInfo.services.packages.active.service_end)); 

                tMsjTemp = SMS_RESTO;
                //tMsjTemp = tMsjTemp.replace('[CELULAR]',  subscriberId);
                tMsjTemp  = tMsjTemp.replace('[CONSUMIDO]',  quotaPercentage);
                tMsjTemp  = tMsjTemp.replace('[SERVICIO]', vProductName);
                tMsjTemp  = tMsjTemp.replace('[BALANCE]', quotaFormat);
                tMsjTemp  = tMsjTemp.replace('[FINAL_HORA]', endDateTiempo);
                tMsjTemp  = tMsjTemp.replace('[FINAL_FECHA]', endDateDia);

                if(!tPrimerPaq) {
                    tMensaje += tMsjTemp;
                    tPrimerPaq = true;     
                }
                else {
                    tMensaje += ';' + tMsjTemp;
                }
            }
        }
    }

    if(typeof navInfo.services.subscriptions != 'undefined'){
        for(i = 0; i &lt; navInfo.services.subscriptions.length; i++){
            foundActive = true;

            if(navInfo.services.subscriptions[i].measure == 'MB'){
                actualQuota = navInfo.services.subscriptions[i].qta_balance;
                quotaFormat = actualQuota > 1024 ? String((actualQuota / 1024).toFixed(2)) + &quot; GB&quot; : String(actualQuota) + &quot; MB&quot;;
                quotaPercentage = String(new Number(100 - new Number(navInfo.services.subscriptions[i].qta_percentage)).toFixed(2));

            } else {
                actualQuota = navInfo.services.subscriptions[i].hours_remaining;
                quotaFormat = actualQuota + &quot; Hrs&quot;;
                quotaPercentage = String(new Number(100 - new Number(navInfo.services.subscriptions[i].hour_percentage)).toFixed(2));
            }

            vProductName = navInfo.services.subscriptions[i].product_name;
            endDate = getCbsDateStr(String(navInfo.services.subscriptions[i].next_renewal));
            endDateDia = getCbsDateStrDia(String(navInfo.services.subscriptions[i].next_renewal));
            endDateTiempo = getCbsDateStrTiempo(String(navInfo.services.subscriptions[i].next_renewal)); 

            tMsjTemp = SMS_RESTO;
            //tMsjTemp = tMsjTemp.replace('[CELULAR]',  subscriberId);
            tMsjTemp  = tMsjTemp.replace('[CONSUMIDO]',  quotaPercentage);
            tMsjTemp  = tMsjTemp.replace('[SERVICIO]', vProductName);
            tMsjTemp  = tMsjTemp.replace('[BALANCE]', quotaFormat);
            tMsjTemp  = tMsjTemp.replace('[FINAL_HORA]', endDateTiempo);
            tMsjTemp  = tMsjTemp.replace('[FINAL_FECHA]', endDateDia);

            if(!tPrimerPaq) {
                tMensaje += tMsjTemp;
                tPrimerPaq = true;     
            }
            else {
                tMensaje += ';' + tMsjTemp;
            }
        }
    }

    if(typeof navInfo.services.applications != 'undefined'){
        if(typeof navInfo.services.applications.active != 'undefined'){
            activeApplications = navInfo.services.applications.active;
            for(i = 0; i &lt; activeApplications.length; i++){
                foundActive = true;
                actualQuota = activeApplications[i].hours_remaining;
                quotaFormat = actualQuota + &quot; Hrs&quot;;
                quotaPercentage = String(new Number(100 - new Number(activeApplications[i].hour_percentage)).toFixed(2));
                vProductName = activeApplications[i].product_name;
                endDate = getCbsDateStr(String(activeApplications[i].service_end));
                endDateDia = getCbsDateStrDia(String(activeApplications[i].service_end));
                endDateTiempo = getCbsDateStrTiempo(String(activeApplications[i].service_end));

                tMsjTemp = SMS_ILI;
                tMsjTemp  = tMsjTemp.replace('[CONSUMIDO]',  quotaPercentage);
                tMsjTemp  = tMsjTemp.replace('[SERVICIO]', vProductName);
                tMsjTemp  = tMsjTemp.replace('[FINAL_HORA]', endDateTiempo);
                tMsjTemp  = tMsjTemp.replace('[FINAL_FECHA]', endDateDia);

                if(!tPrimerPaq) {
                    tMensaje += tMsjTemp;
                    tPrimerPaq = true;     
                }
                else {
                    tMensaje += ';' + tMsjTemp;
                }
            }
        }
    }

    if(typeof navInfo.services.plan != 'undefined'){
        if(typeof navInfo.services.plan.product_name != 'undefined'){
            foundActive = true;
            actualQuota = new Number(navInfo.services.plan.qta_balance).toFixed(2);
            quotaFormat = actualQuota > 1024 ? String((actualQuota / 1024).toFixed(2)) + &quot; GB&quot; : String(actualQuota) + &quot; MB&quot;;
            quotaPercentage = String(new Number(100 - new Number(navInfo.services.plan.qta_percentage)).toFixed(2));
            vProductName = navInfo.services.plan.product_name;
            endDate = getCbsDateStr(String(navInfo.services.plan.service_start));

            tMsjTemp = SMS_PLAN;
            //tMsjTemp = tMsjTemp.replace('[CELULAR]',  subscriberId);
            tMsjTemp  = tMsjTemp.replace('[CONSUMIDO]',  quotaPercentage);
            tMsjTemp  = tMsjTemp.replace('[SERVICIO]', vProductName);
            tMsjTemp  = tMsjTemp.replace('[BALANCE]', quotaFormat);
            tMsjTemp  = tMsjTemp.replace('[FINAL_FECHA]', 'tu fecha de corte');

            if(!tPrimerPaq) {
                tMensaje += tMsjTemp;
                tPrimerPaq = true;     
            }
            else {
                tMensaje += ';' + tMsjTemp;
            }
        }

    }

    if(typeof navInfo.services.addons != 'undefined'){
        tMensajeTmp = ADDON_0101;
        
        if(typeof navInfo.services.addons.product_name != 'undefined'){
            foundActive = true;
            actualQuota = new Number(navInfo.services.addons.qta_balance).toFixed(2);
            quotaFormat = actualQuota > 1024 ? String((actualQuota / 1024).toFixed(2)) + &quot; GB&quot; : String(actualQuota) + &quot; MB&quot;;
            quotaPercentage = String(new Number(100 - new Number(navInfo.services.addons.qta_percentage)).toFixed(2));
            vProductName = navInfo.services.addons.product_name;
            endDate = 'tu fecha de corte';

            tMsjTemp = SMS_PLAN;
            //tMsjTemp = tMsjTemp.replace('[CELULAR]',  subscriberId);
            tMsjTemp  = tMsjTemp.replace('[CONSUMIDO]',  quotaPercentage);
            tMsjTemp  = tMsjTemp.replace('[SERVICIO]', vProductName);
            tMsjTemp  = tMsjTemp.replace('[BALANCE]', quotaFormat);
            tMsjTemp  = tMsjTemp.replace('[FINAL_FECHA]', endDate);

            if(!tPrimerPaq) {
                tMensaje += tMsjTemp;
                tPrimerPaq = true;     
            }
            else {
                tMensaje += ';' + tMsjTemp;
            }
        }

    }

}

if(!foundActive){
    tMensaje = NO_PAQ_SUS;
    tMensaje = tMensaje.replace('&lt;MSISDN>',  subscriberId);
}// else {
    //tmpConsumosMsj = tmpConsumosMsj.replace('%', tMensajeConsumos);
    //tmpAppMsj = tmpAppMsj.replace('%', tMensajeApps);
    //tMensaje = tmpConsumosMsj;
    //tMensaje = tMensaje.replace(/&lt;MSISDN>/gi,  subscriberId);
//}

MESSAGE = tMensaje;

function getCycleDate(billingDay){

    var vSysDate = new Date();

    var vBillDay = new Number(billingDay);

    

    if(vBillDay > 31 || vBillDay &lt; 1){

        vBillDay = 1;

    }

    

    if(vSysDate.getDate() > vBillDay){

        vSysDate.setMonth(vSysDate.getMonth() + 1);

    }

    

    vSysDate.setDate(vBillDay);

    

    return padStr(vSysDate.getFullYear(), 2, '0', STR_PAD_LEFT) + '/' + padStr((vSysDate.getMonth() + 1), 2, '0', STR_PAD_LEFT) + '/' + padStr(vSysDate.getDate(), 2, '0', STR_PAD_LEFT) + ' ' + padStr(vSysDate.getHours(), 2, '0', STR_PAD_LEFT) + ':' + padStr(vSysDate.getMinutes(), 2, '0', STR_PAD_LEFT) + ':' + padStr(vSysDate.getSeconds(), 2, '0', STR_PAD_LEFT);

}



function getCbsDateStr(cbsDate){

//20161012000000

    var vYear = cbsDate.substring(0, 4);

    var vMonth = cbsDate.substring(4, 6);

    var vDay = cbsDate.substring(6, 8);

    var vHours = cbsDate.substring(8, 10);

    var vMinutes = cbsDate.substring(10, 12);

    var vSeconds = cbsDate.substring(12, 14);

    

    return  padStr(vDay, 2, '0', STR_PAD_LEFT) + '-' + padStr(vMonth, 2, '0', STR_PAD_LEFT) + '-' + padStr(vYear, 2, '0', STR_PAD_LEFT) + ' ' + padStr(vHours, 2, '0', STR_PAD_LEFT) + ':' + padStr(vMinutes, 2, '0', STR_PAD_LEFT) + ':' + padStr(vSeconds, 2, '0', STR_PAD_LEFT);

}

function getCbsDateStrDia(cbsDate){
        var vYear = cbsDate.substring(0, 4);
        var vMonth = cbsDate.substring(4, 6);
        var vDay = cbsDate.substring(6, 8);
    
        return  padStr(vDay, 2, '0', STR_PAD_LEFT) + '-' + padStr(vMonth, 2, '0', STR_PAD_LEFT) + '-' + padStr(vYear, 2, '0', STR_PAD_LEFT);
}

function getCbsDateStrTiempo(cbsDate){
        var vHours = cbsDate.substring(8, 10);
        var vMinutes = cbsDate.substring(10, 12);
        var vSeconds = cbsDate.substring(12, 14);
    
        return  padStr(vHours, 2, '0', STR_PAD_LEFT) + ':' + padStr(vMinutes, 2, '0', STR_PAD_LEFT) + ':' + padStr(vSeconds, 2, '0', STR_PAD_LEFT);
}

//Funcion a la cual se le manda un valor y le hace lpad o rpad con el caracter indicado y la longitud indicada
function padStr(str, len, pad, dir) {
    if (typeof(len) == 'undefined') { var len = 0; };

    if (typeof(pad) == 'undefined') { var pad = ' '; };

    if (typeof(dir) == 'undefined') { var dir = STR_PAD_RIGHT; };



    if (len + 1 >= str.length) {



        switch (dir){



            case STR_PAD_LEFT:

                str = Array(len + 1 - str.length).join(pad) + str;

            break;



            case STR_PAD_BOTH:

                var right = Math.ceil((padlen = len - str.length) / 2);

                var left = padlen - right;

                str = Array(left+1).join(pad) + str + Array(right+1).join(pad);

            break;



            default:

                str = str + Array(len + 1 - str.length).join(pad);

            break;



        } // switch



    }



    return str;



}</bpmn2:script>
    </bpmn2:scriptTask>
    <bpmn2:serviceTask id="ServiceTask_6" name="KannelSendSMSTask" implementation="##WebService">
      <bpmn2:incoming>SequenceFlow_26</bpmn2:incoming>
      <bpmn2:incoming>SequenceFlow_28</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_9</bpmn2:outgoing>
      <bpmn2:ioSpecification id="InputOutputSpecification_5">
        <bpmn2:dataInput id="DataInput_11" name="TO"/>
        <bpmn2:dataInput id="DataInput_12" name="FROM"/>
        <bpmn2:dataInput id="DataInput_15" name="MESSAGE"/>
        <bpmn2:inputSet id="InputSet_5" name="Input Set 21">
          <bpmn2:dataInputRefs>DataInput_11</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_12</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_15</bpmn2:dataInputRefs>
        </bpmn2:inputSet>
        <bpmn2:outputSet id="OutputSet_6" name="Output Set 30"/>
      </bpmn2:ioSpecification>
      <bpmn2:dataInputAssociation id="DataInputAssociation_11">
        <bpmn2:targetRef>DataInput_11</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_13">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_24">'504' + subscriberId</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_26">DataInput_54</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_12">
        <bpmn2:targetRef>DataInput_12</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_14">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_27">'0101'</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_28">DataInput_55</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_15">
        <bpmn2:targetRef>DataInput_15</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_15">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_29">tMensaje </bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_30">DataInput_56</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
    </bpmn2:serviceTask>
    <bpmn2:sequenceFlow id="SequenceFlow_9" sourceRef="ServiceTask_6" targetRef="EndEvent_1"/>
    <bpmn2:serviceTask id="ServiceTask_3" name="MasterStatusGetSubscriberProfileTask" implementation="##WebService">
      <bpmn2:incoming>SequenceFlow_7</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_10</bpmn2:outgoing>
      <bpmn2:ioSpecification id="InputOutputSpecification_4">
        <bpmn2:dataInput id="DataInput_7" name="SUBSCRIBER"/>
        <bpmn2:dataInput id="DataInput_8" name="PROFILE"/>
        <bpmn2:dataInput id="DataInput_9" name="MasterStatusGetSubscriberProfileTask__failOverPolicy"/>
        <bpmn2:dataOutput id="DataOutput_24" name="CANTIDAD_CONSULTAS_DATE"/>
        <bpmn2:dataOutput id="DataOutput_19" name="CANTIDAD_CONSULTAS"/>
        <bpmn2:inputSet id="InputSet_4" name="Input Set 5">
          <bpmn2:dataInputRefs>DataInput_8</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_7</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_9</bpmn2:dataInputRefs>
        </bpmn2:inputSet>
        <bpmn2:outputSet id="OutputSet_5" name="Output Set 10">
          <bpmn2:dataOutputRefs>DataOutput_19</bpmn2:dataOutputRefs>
          <bpmn2:dataOutputRefs>DataOutput_24</bpmn2:dataOutputRefs>
        </bpmn2:outputSet>
      </bpmn2:ioSpecification>
      <bpmn2:dataInputAssociation id="DataInputAssociation_7">
        <bpmn2:targetRef>DataInput_7</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_30">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_60">subscriberId</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_61">DataInput_4</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_8">
        <bpmn2:targetRef>DataInput_8</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_31">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_62">'12'</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_63">DataInput_10</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_9">
        <bpmn2:targetRef>DataInput_9</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_32">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_64">false</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_65">DataInput_11</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataOutputAssociation id="DataOutputAssociation_19">
        <bpmn2:sourceRef>DataOutput_19</bpmn2:sourceRef>
        <bpmn2:assignment id="Assignment_33">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_66">DataOutput_9</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_67">VCount_consult</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataOutputAssociation>
      <bpmn2:dataOutputAssociation id="DataOutputAssociation_24">
        <bpmn2:sourceRef>DataOutput_24</bpmn2:sourceRef>
        <bpmn2:assignment id="Assignment_29">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_69">DataOutput_24</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_71">vConsul_date</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataOutputAssociation>
    </bpmn2:serviceTask>
    <bpmn2:scriptTask id="ScriptTask_4" name="validateMasterStatus">
      <bpmn2:incoming>SequenceFlow_10</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_13</bpmn2:outgoing>
      <bpmn2:script>var MESSAGE = '';&#xD;
var tMensaje = '';&#xD;
var tHoy = new Date();&#xD;
tHoy.setHours(0);&#xD;
tHoy.setMinutes(0);&#xD;
tHoy.setSeconds(0);&#xD;
&#xD;
//var parseDate2String = &#xD;
function parseDate2String (Fecha) {&#xD;
    var Texto = ' ';&#xD;
    var tAnio = Fecha.getFullYear();&#xD;
    var tMes = Fecha.getMonth() + 1;&#xD;
    var tDia = Fecha.getDate();&#xD;
    var tHora = Fecha.getHours();&#xD;
    var tMinutos = Fecha.getMinutes();&#xD;
    var tSegundos = Fecha.getSeconds();&#xD;
    Texto = String(tAnio) + '-';&#xD;
    if (tMes &lt; 10) Texto = Texto + '0';&#xD;
    Texto = Texto +  String(tMes) + '-';&#xD;
    if (tDia &lt; 10) Texto = Texto + '0';&#xD;
    Texto = Texto +  String(tDia) + ' ';&#xD;
    if (tHora &lt; 10) Texto = Texto + '0';&#xD;
    Texto = Texto +  String(tHora) + ':';&#xD;
    if (tMinutos &lt; 10) Texto = Texto + '0';&#xD;
    Texto = Texto +  String(tMinutos) + ':';    &#xD;
    if (tSegundos &lt; 10) Texto = Texto + '0';&#xD;
    Texto = Texto +  String(tSegundos);&#xD;
    return Texto;&#xD;
};&#xD;
&#xD;
var tTiempo = new Date();&#xD;
function parseISODate (Texto) {&#xD;
    Texto = Texto.replace(/\D/g,' ');&#xD;
    var Partes = Texto.split(' ');&#xD;
//    Partes[1]--; //restar 1 al mes&#xD;
    var tAnio = Partes[0];&#xD;
    var tMes = Partes[1] - 1;&#xD;
    var tDia = Partes[2];&#xD;
    &#xD;
    var tHora = Partes[3];&#xD;
    var tMinutos = Partes[4];&#xD;
    var tSegundos = Partes[5];&#xD;
    &#xD;
    return new Date(tAnio,tMes,tDia,tHora,tMinutos,tSegundos);&#xD;
};&#xD;
&#xD;
var tTransacciones_Fecha = ' ';&#xD;
var tTransacciones = 0;&#xD;
var tConsultas_diarias = parseInt(CONSULTAS_DIARIAS);&#xD;
&#xD;
var tmaxIntentos = false;&#xD;
&#xD;
if (typeof VCount_consult  != 'undefined')  {&#xD;
    tTransacciones = parseInt(VCount_consult);&#xD;
};&#xD;
&#xD;
tTransacciones += 1;&#xD;
if (typeof vConsul_date  != 'undefined') {&#xD;
    tTransacciones_Fecha = vConsul_date;&#xD;
}else{&#xD;
    tTransacciones_Fecha = parseDate2String(tTiempo);&#xD;
};&#xD;
&#xD;
var tTransacciones_FechaD = parseISODate(tTransacciones_Fecha);&#xD;
if (tTransacciones_FechaD &lt; tHoy) {&#xD;
    tTransacciones = 1;&#xD;
};&#xD;
&#xD;
&#xD;
if(tTransacciones > tConsultas_diarias){&#xD;
            tMensaje = 'Estimado cliente, has utilizado las &lt;MAXIMO_CONSULTAS> consultas disponibles para hoy. Podras consultar de nuevo el dia de manana. Sonrie, tienes Tigo!'&#xD;
            tMensaje  = tMensaje.replace('&lt;MAXIMO_CONSULTAS>',  tConsultas_diarias);&#xD;
            tmaxIntentos = true;&#xD;
};&#xD;
&#xD;
MESSAGE = tMensaje ;</bpmn2:script>
    </bpmn2:scriptTask>
    <bpmn2:exclusiveGateway id="ExclusiveGateway_3" name="Exists" gatewayDirection="Diverging" default="SequenceFlow_22">
      <bpmn2:incoming>SequenceFlow_13</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_22</bpmn2:outgoing>
      <bpmn2:outgoing>SequenceFlow_26</bpmn2:outgoing>
    </bpmn2:exclusiveGateway>
    <bpmn2:sequenceFlow id="SequenceFlow_10" sourceRef="ServiceTask_3" targetRef="ScriptTask_4"/>
    <bpmn2:sequenceFlow id="SequenceFlow_13" sourceRef="ScriptTask_4" targetRef="ExclusiveGateway_3"/>
    <bpmn2:sequenceFlow id="SequenceFlow_22" sourceRef="ExclusiveGateway_3" targetRef="ServiceTask_2"/>
    <bpmn2:serviceTask id="ServiceTask_12" name="MasterStatusCreateSubscriberProfileTask" implementation="##WebService">
      <bpmn2:incoming>SequenceFlow_14</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_28</bpmn2:outgoing>
      <bpmn2:ioSpecification id="InputOutputSpecification_23">
        <bpmn2:dataInput id="DataInput_26" name="SUBSCRIBER"/>
        <bpmn2:dataInput id="DataInput_27" name="PROFILE"/>
        <bpmn2:dataInput id="DataInput_29" name="120"/>
        <bpmn2:inputSet id="InputSet_15" name="Input Set 17">
          <bpmn2:dataInputRefs>DataInput_26</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_27</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_29</bpmn2:dataInputRefs>
        </bpmn2:inputSet>
        <bpmn2:outputSet id="OutputSet_17" name="Output Set 22"/>
      </bpmn2:ioSpecification>
      <bpmn2:dataInputAssociation id="DataInputAssociation_26">
        <bpmn2:targetRef>DataInput_26</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_49">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_101">subscriberId</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_102">DataInput_41</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_27">
        <bpmn2:targetRef>DataInput_27</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_50">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_103">'12'</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_104">DataInput_42</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_29">
        <bpmn2:targetRef>DataInput_29</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_53">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_116">tTransacciones</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_114">DataInput_29</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
    </bpmn2:serviceTask>
    <bpmn2:sequenceFlow id="SequenceFlow_26" sourceRef="ExclusiveGateway_3" targetRef="ServiceTask_6">
      <bpmn2:conditionExpression xsi:type="bpmn2:tFormalExpression" id="FormalExpression_18">tmaxIntentos</bpmn2:conditionExpression>
    </bpmn2:sequenceFlow>
    <bpmn2:sequenceFlow id="SequenceFlow_28" sourceRef="ServiceTask_12" targetRef="ServiceTask_6"/>
    <bpmn2:serviceTask id="ServiceTask_7" name="MasterStatusGetSubscriberProfileTask" implementation="##WebService">
      <bpmn2:incoming>SequenceFlow_6</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_5</bpmn2:outgoing>
      <bpmn2:ioSpecification id="InputOutputSpecification_8">
        <bpmn2:dataInput id="DataInput_6" name="SUBSCRIBER"/>
        <bpmn2:dataInput id="DataInput_10" name="PROFILE"/>
        <bpmn2:dataOutput id="DataOutput_45" name="FECHA_ACTIVACION"/>
        <bpmn2:dataOutput id="DataOutput_46" name="FECHA_ALTA_ANEXO"/>
        <bpmn2:dataOutput id="DataOutput_47" name="TIPO_SUSCRIPTOR"/>
        <bpmn2:dataOutput id="DataOutput_48" name="FECHA_ACTIVACION_DATE"/>
        <bpmn2:dataOutput id="DataOutput_49" name="PLAN_VOZ"/>
        <bpmn2:inputSet id="InputSet_6" name="Input Set 5">
          <bpmn2:dataInputRefs>DataInput_10</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_6</bpmn2:dataInputRefs>
        </bpmn2:inputSet>
        <bpmn2:outputSet id="OutputSet_7" name="Output Set 10">
          <bpmn2:dataOutputRefs>DataOutput_45</bpmn2:dataOutputRefs>
          <bpmn2:dataOutputRefs>DataOutput_46</bpmn2:dataOutputRefs>
          <bpmn2:dataOutputRefs>DataOutput_47</bpmn2:dataOutputRefs>
          <bpmn2:dataOutputRefs>DataOutput_48</bpmn2:dataOutputRefs>
          <bpmn2:dataOutputRefs>DataOutput_49</bpmn2:dataOutputRefs>
        </bpmn2:outputSet>
      </bpmn2:ioSpecification>
      <bpmn2:dataInputAssociation id="DataInputAssociation_6">
        <bpmn2:targetRef>DataInput_6</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_61">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_123">subscriberId</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_124">DataInput_4</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_10">
        <bpmn2:targetRef>DataInput_10</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_62">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_125">'24'</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_126">DataInput_10</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataOutputAssociation id="DataOutputAssociation_45">
        <bpmn2:sourceRef>DataOutput_45</bpmn2:sourceRef>
        <bpmn2:assignment id="Assignment_63">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_127">DataOutput_7</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_128">vAltaNumero</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataOutputAssociation>
      <bpmn2:dataOutputAssociation id="DataOutputAssociation_46">
        <bpmn2:sourceRef>DataOutput_46</bpmn2:sourceRef>
        <bpmn2:assignment id="Assignment_64">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_129">DataOutput_3</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_130">vAltaAnexo</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataOutputAssociation>
      <bpmn2:dataOutputAssociation id="DataOutputAssociation_47">
        <bpmn2:sourceRef>DataOutput_47</bpmn2:sourceRef>
        <bpmn2:assignment id="Assignment_65">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_131">DataOutput_5</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_132">vSubscriberType</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataOutputAssociation>
      <bpmn2:dataOutputAssociation id="DataOutputAssociation_48">
        <bpmn2:sourceRef>DataOutput_48</bpmn2:sourceRef>
        <bpmn2:assignment id="Assignment_66">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_133">DataOutput_14</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_134">vMSAltaDate</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataOutputAssociation>
      <bpmn2:dataOutputAssociation id="DataOutputAssociation_49">
        <bpmn2:sourceRef>DataOutput_49</bpmn2:sourceRef>
        <bpmn2:assignment id="Assignment_67">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_135">DataOutput_1</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_136">vPlanVoz</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataOutputAssociation>
    </bpmn2:serviceTask>
    <bpmn2:sequenceFlow id="SequenceFlow_5" sourceRef="ServiceTask_7" targetRef="ScriptTask_5"/>
    <bpmn2:scriptTask id="ScriptTask_5" name="Subscriber">
      <bpmn2:incoming>SequenceFlow_5</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_7</bpmn2:outgoing>
      <bpmn2:script>var typeSubscriber = 'PRE,HIC,CIN,HIB,HIB20,POS';&#xD;
&#xD;
if(typeof vSubscriberType != 'undefined'){&#xD;
    if(typeSubscriber.indexOf(vSubscriberType) &lt; 0){&#xD;
        vSubscriberType = 'POS';&#xD;
    }&#xD;
    if(vSubscriberType == 'CIN'){&#xD;
        vSubscriberType = 'HIC';&#xD;
    }&#xD;
}</bpmn2:script>
    </bpmn2:scriptTask>
    <bpmn2:sequenceFlow id="SequenceFlow_7" sourceRef="ScriptTask_5" targetRef="ServiceTask_3"/>
    <bpmn2:sequenceFlow id="SequenceFlow_11" sourceRef="ServiceTask_2" targetRef="ScriptTask_3"/>
    <bpmn2:sequenceFlow id="SequenceFlow_14" sourceRef="ScriptTask_3" targetRef="ServiceTask_12"/>
    <bpmn2:serviceTask id="ServiceTask_2" name="ExecuteOrderTask" implementation="##WebService">
      <bpmn2:incoming>SequenceFlow_22</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_11</bpmn2:outgoing>
      <bpmn2:ioSpecification id="InputOutputSpecification_2">
        <bpmn2:dataInput id="DataInput_24" name="CHANNEL_ID"/>
        <bpmn2:dataInput id="DataInput_25" name="EXTERNAL_TRANSACTION_ID"/>
        <bpmn2:dataInput id="DataInput_28" name="COMMENT"/>
        <bpmn2:dataInput id="DataInput_30" name="SUBSCRIBER_ID"/>
        <bpmn2:dataInput id="DataInput_31" name="PRODUCT_ID"/>
        <bpmn2:dataInput id="DataInput_32" name="ORDER_TYPE"/>
        <bpmn2:dataInput id="DataInput_37" name="ExecuteOrderTask__failOverPolicy"/>
        <bpmn2:dataInput id="DataInput_38" name="ExecuteOrderTask__retryPolicyNumber"/>
        <bpmn2:dataOutput id="DataOutput_1" name="JSON_RESPONSE"/>
        <bpmn2:inputSet id="InputSet_3" name="Input Set 44">
          <bpmn2:dataInputRefs>DataInput_24</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_25</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_28</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_30</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_31</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_32</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_37</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_38</bpmn2:dataInputRefs>
        </bpmn2:inputSet>
        <bpmn2:outputSet id="OutputSet_3" name="Output Set 44">
          <bpmn2:dataOutputRefs>DataOutput_1</bpmn2:dataOutputRefs>
        </bpmn2:outputSet>
      </bpmn2:ioSpecification>
      <bpmn2:dataInputAssociation id="DataInputAssociation_24">
        <bpmn2:targetRef>DataInput_24</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_16">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_32">channelId</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_33">DataInput_108</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_25">
        <bpmn2:targetRef>DataInput_25</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_17">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_34">transactionId</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_35">DataInput_115</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_28">
        <bpmn2:targetRef>DataInput_28</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_18">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_36">'Data Query'</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_37">DataInput_119</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_30">
        <bpmn2:targetRef>DataInput_30</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_19">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_38">subscriberId</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_39">DataInput_133</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_31">
        <bpmn2:targetRef>DataInput_31</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_20">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_40">PRODUCTO_CONSULTA</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_41">DataInput_143</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_32">
        <bpmn2:targetRef>DataInput_32</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_21">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_42">'TRANSFER'</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_43">DataInput_178</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_37">
        <bpmn2:targetRef>DataInput_37</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_26">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_52">false</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_53">DataInput_183</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_38">
        <bpmn2:targetRef>DataInput_38</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_27">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_54">0</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_55">DataInput_29</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataOutputAssociation id="DataOutputAssociation_1">
        <bpmn2:sourceRef>DataOutput_1</bpmn2:sourceRef>
        <bpmn2:assignment id="Assignment_28">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_56">DataOutput_1</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_58">vJsonData</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataOutputAssociation>
    </bpmn2:serviceTask>
  </bpmn2:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1" name="Default Process Diagram">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Consulta0101">
      <bpmndi:BPMNShape id="BPMNShape_1" bpmnElement="StartEvent_1">
        <dc:Bounds height="36.0" width="36.0" x="120.0" y="27.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_1" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="68.0" x="104.0" y="63.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_2" bpmnElement="EndEvent_1">
        <dc:Bounds height="36.0" width="36.0" x="257.0" y="491.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_2" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="65.0" x="243.0" y="527.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ScriptTask_2" bpmnElement="ScriptTask_3">
        <dc:Bounds height="50.0" width="110.0" x="480.0" y="189.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_11" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="59.0" x="505.0" y="206.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ServiceTask_5" bpmnElement="ServiceTask_6">
        <dc:Bounds height="50.0" width="110.0" x="220.0" y="380.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_19" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="30.0" width="120.0" x="215.0" y="390.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ServiceTask_2" bpmnElement="ServiceTask_3">
        <dc:Bounds height="50.0" width="151.0" x="633.0" y="20.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_5" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="30.0" width="213.0" x="602.0" y="30.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ScriptTask_3" bpmnElement="ScriptTask_4">
        <dc:Bounds height="50.0" width="110.0" x="940.0" y="20.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_7" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="30.0" width="114.0" x="938.0" y="30.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ExclusiveGateway_2" bpmnElement="ExclusiveGateway_3" isMarkerVisible="true">
        <dc:Bounds height="50.0" width="50.0" x="970.0" y="189.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_13" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="33.0" x="978.0" y="239.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ServiceTask_8" bpmnElement="ServiceTask_12">
        <dc:Bounds height="50.0" width="110.0" x="220.0" y="189.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_27" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="45.0" width="103.0" x="223.0" y="191.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ServiceTask_6" bpmnElement="ServiceTask_7">
        <dc:Bounds height="50.0" width="110.0" x="225.0" y="20.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_20" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="45.0" width="101.0" x="229.0" y="22.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ScriptTask_4" bpmnElement="ScriptTask_5">
        <dc:Bounds height="50.0" width="110.0" x="440.0" y="20.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_25" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="60.0" x="465.0" y="37.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ServiceTask_1" bpmnElement="ServiceTask_2">
        <dc:Bounds height="50.0" width="110.0" x="730.0" y="189.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_3" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="101.0" x="734.0" y="206.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_6" bpmnElement="SequenceFlow_6" sourceElement="BPMNShape_1" targetElement="BPMNShape_ServiceTask_6">
        <di:waypoint xsi:type="dc:Point" x="156.0" y="45.0"/>
        <di:waypoint xsi:type="dc:Point" x="225.0" y="45.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_9" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_9" bpmnElement="SequenceFlow_9" sourceElement="BPMNShape_ServiceTask_5" targetElement="BPMNShape_2">
        <di:waypoint xsi:type="dc:Point" x="275.0" y="430.0"/>
        <di:waypoint xsi:type="dc:Point" x="275.0" y="460.0"/>
        <di:waypoint xsi:type="dc:Point" x="275.0" y="491.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_21" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_5" bpmnElement="SequenceFlow_10" sourceElement="BPMNShape_ServiceTask_2" targetElement="BPMNShape_ScriptTask_3">
        <di:waypoint xsi:type="dc:Point" x="763.0" y="45.0"/>
        <di:waypoint xsi:type="dc:Point" x="940.0" y="45.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_23" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_10" bpmnElement="SequenceFlow_13" sourceElement="BPMNShape_ScriptTask_3" targetElement="BPMNShape_ExclusiveGateway_2">
        <di:waypoint xsi:type="dc:Point" x="995.0" y="70.0"/>
        <di:waypoint xsi:type="dc:Point" x="995.0" y="189.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_24" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_18" bpmnElement="SequenceFlow_22" sourceElement="BPMNShape_ExclusiveGateway_2" targetElement="BPMNShape_ServiceTask_1">
        <di:waypoint xsi:type="dc:Point" x="970.0" y="214.0"/>
        <di:waypoint xsi:type="dc:Point" x="840.0" y="214.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_26" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_22" bpmnElement="SequenceFlow_26" sourceElement="BPMNShape_ExclusiveGateway_2" targetElement="BPMNShape_ServiceTask_5">
        <di:waypoint xsi:type="dc:Point" x="995.0" y="239.0"/>
        <di:waypoint xsi:type="dc:Point" x="995.0" y="405.0"/>
        <di:waypoint xsi:type="dc:Point" x="330.0" y="405.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_29" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_24" bpmnElement="SequenceFlow_28" sourceElement="BPMNShape_ServiceTask_8" targetElement="BPMNShape_ServiceTask_5">
        <di:waypoint xsi:type="dc:Point" x="275.0" y="239.0"/>
        <di:waypoint xsi:type="dc:Point" x="275.0" y="380.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_31" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_8" bpmnElement="SequenceFlow_5" sourceElement="BPMNShape_ServiceTask_6" targetElement="BPMNShape_ScriptTask_4">
        <di:waypoint xsi:type="dc:Point" x="335.0" y="45.0"/>
        <di:waypoint xsi:type="dc:Point" x="440.0" y="45.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_22" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_12" bpmnElement="SequenceFlow_7" sourceElement="BPMNShape_ScriptTask_4" targetElement="BPMNShape_ServiceTask_2">
        <di:waypoint xsi:type="dc:Point" x="550.0" y="45.0"/>
        <di:waypoint xsi:type="dc:Point" x="653.0" y="45.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_28" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_13" bpmnElement="SequenceFlow_11" sourceElement="BPMNShape_ServiceTask_1" targetElement="BPMNShape_ScriptTask_2">
        <di:waypoint xsi:type="dc:Point" x="730.0" y="214.0"/>
        <di:waypoint xsi:type="dc:Point" x="590.0" y="214.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_34" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_14" bpmnElement="SequenceFlow_14" sourceElement="BPMNShape_ScriptTask_2" targetElement="BPMNShape_ServiceTask_8">
        <di:waypoint xsi:type="dc:Point" x="480.0" y="214.0"/>
        <di:waypoint xsi:type="dc:Point" x="330.0" y="214.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_35" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
    <bpmndi:BPMNLabelStyle id="BPMNLabelStyle_1">
      <dc:Font name="arial" size="9.0"/>
    </bpmndi:BPMNLabelStyle>
  </bpmndi:BPMNDiagram>
</bpmn2:definitions>