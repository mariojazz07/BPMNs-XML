<?xml version="1.0" encoding="UTF-8"?>
<!-- origin at X=0.0 Y=0.0 -->
<bpmn2:definitions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bpmn2="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:ext="http://org.eclipse.bpmn2/ext" xmlns:xs="http://www.w3.org/2001/XMLSchema" id="Definitions_1" exporter="org.eclipse.bpmn2.modeler.core" exporterVersion="1.2.4.Final-v20160504-1515-B111" targetNamespace="http://org.eclipse.bpmn2/default/process">
  <bpmn2:process id="PaquetesInternet-Deactivate" name="Default Process" isExecutable="false">
    <bpmn2:startEvent id="StartEvent_1" name="Start Event 1">
      <bpmn2:outgoing>SequenceFlow_1</bpmn2:outgoing>
    </bpmn2:startEvent>
    <bpmn2:sequenceFlow id="SequenceFlow_1" sourceRef="StartEvent_1" targetRef="ScriptTask_2"/>
    <bpmn2:endEvent id="EndEvent_1" name="End Event 1">
      <bpmn2:incoming>SequenceFlow_5</bpmn2:incoming>
    </bpmn2:endEvent>
    <bpmn2:serviceTask id="ServiceTask_2" name="QueryFreeUnitTask" implementation="##WebService">
      <bpmn2:incoming>SequenceFlow_6</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_7</bpmn2:outgoing>
      <bpmn2:ioSpecification id="InputOutputSpecification_2">
        <bpmn2:dataInput id="DataInput_2" name="SUBPRIMARY_IDENTITY"/>
        <bpmn2:dataInput id="DataInput_3" name="AP_C_OPERATE_TYPE"/>
        <bpmn2:dataOutput id="DataOutput_2" name="JSON_RESPONSE"/>
        <bpmn2:inputSet id="InputSet_3" name="Input Set 5">
          <bpmn2:dataInputRefs>DataInput_2</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_3</bpmn2:dataInputRefs>
        </bpmn2:inputSet>
        <bpmn2:outputSet id="OutputSet_3" name="Output Set 10">
          <bpmn2:dataOutputRefs>DataOutput_2</bpmn2:dataOutputRefs>
        </bpmn2:outputSet>
      </bpmn2:ioSpecification>
      <bpmn2:dataInputAssociation id="DataInputAssociation_2">
        <bpmn2:targetRef>DataInput_2</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_3">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_5">subscriberId</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_6">DataInput_4</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_3">
        <bpmn2:targetRef>DataInput_3</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_5">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_13">'1'</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_11">DataInput_3</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataOutputAssociation id="DataOutputAssociation_2">
        <bpmn2:sourceRef>DataOutput_2</bpmn2:sourceRef>
        <bpmn2:assignment id="Assignment_4">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_7">DataOutput_17</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_8">vFreeUnitWallets</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataOutputAssociation>
    </bpmn2:serviceTask>
    <bpmn2:scriptTask id="ScriptTask_2" name="initValues">
      <bpmn2:incoming>SequenceFlow_1</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_4</bpmn2:outgoing>
      <bpmn2:script>var STR_PAD_LEFT = 1;&#xD;
var STR_PAD_RIGHT = 2;&#xD;
var STR_PAD_BOTH = 3;&#xD;
var BPMN_RESPONSE_CODE = '100';&#xD;
var BPMN_RESPONSE_MESSAGE = 'Error durante el proceso.';&#xD;
var offeringId = '0';&#xD;
var purchaseSeq = '0';&#xD;
var vMissingParam = false;&#xD;
var strMissingParam = 'Faltan los siguientes parametros: ';&#xD;
var vParams = '';&#xD;
var vConcat = '';&#xD;
&#xD;
if(typeof OFFERING != 'undefined'){&#xD;
    offeringId = OFFERING;&#xD;
} else {&#xD;
    vMissingParam = true;&#xD;
    vParams += 'OFFERING';&#xD;
}&#xD;
&#xD;
if(typeof PURCHASE_SEQ != 'undefined'){&#xD;
    purchaseSeq = PURCHASE_SEQ;&#xD;
} else {&#xD;
    vMissingParam = true;&#xD;
    vParams = vParams == '' ? 'PURCHASE_SEQ' : ',PURCHASE_SEQ';&#xD;
}&#xD;
&#xD;
//Funcion a la cual se le manda un valor y le hace lpad o rpad con el caracter indicado y la longitud indicada&#xD;
function padStr(str, len, pad, dir) {&#xD;
&#xD;
    if (typeof(len) == 'undefined') { var len = 0; };&#xD;
    if (typeof(pad) == 'undefined') { var pad = ' '; };&#xD;
    if (typeof(dir) == 'undefined') { var dir = STR_PAD_RIGHT; };&#xD;
&#xD;
    if (len + 1 >= str.length) {&#xD;
&#xD;
        switch (dir){&#xD;
&#xD;
            case STR_PAD_LEFT:&#xD;
                str = Array(len + 1 - str.length).join(pad) + str;&#xD;
            break;&#xD;
&#xD;
            case STR_PAD_BOTH:&#xD;
                var right = Math.ceil((padlen = len - str.length) / 2);&#xD;
                var left = padlen - right;&#xD;
                str = Array(left+1).join(pad) + str + Array(right+1).join(pad);&#xD;
            break;&#xD;
&#xD;
            default:&#xD;
                str = str + Array(len + 1 - str.length).join(pad);&#xD;
            break;&#xD;
&#xD;
        } // switch&#xD;
&#xD;
    }&#xD;
&#xD;
    return str;&#xD;
&#xD;
}&#xD;
&#xD;
//Transforma el mtr que se pasa a COMVERSE&#xD;
function transformMtr(mtr, vProducto, vCalendario, vAprovisiona, vPrestamo, vCosto, vComision, vSvcKey){&#xD;
    var vMtrTransform = mtr;&#xD;
    var fechaActual = new Date();&#xD;
    var strFecha = parseDateToStringAS(fechaActual);&#xD;
    &#xD;
    vMtrTransform = vMtrTransform.replace('PRODUCT_ID', vProducto);&#xD;
    vMtrTransform = vMtrTransform.replace('CANAL_ACTIVACION', channelId);&#xD;
    vMtrTransform = vMtrTransform.replace('TRANSACTION_ID', vTransactionId);&#xD;
    vMtrTransform = vMtrTransform.replace('CALENDARIO', vCalendario);&#xD;
    vMtrTransform = vMtrTransform.replace('APROVISIONA', vAprovisiona);&#xD;
    vMtrTransform = vMtrTransform.replace('FECHA', strFecha);&#xD;
    vMtrTransform = vMtrTransform.replace('PRESTAMO', vPrestamo);&#xD;
    vMtrTransform = vMtrTransform.replace('COSTO_PRESTAMO', vCosto);&#xD;
    vMtrTransform = vMtrTransform.replace('COMISION', vComision);&#xD;
    vMtrTransform = vMtrTransform.replace('SVC_KEY', vSvcKey);&#xD;
&#xD;
    return vMtrTransform;&#xD;
}&#xD;
&#xD;
//Convierte un valor texto a al formato yyyyMMdd&#xD;
function parseDateToStringAS (Fecha) {&#xD;
    var strDate = ' ';&#xD;
    var year = Fecha.getFullYear();&#xD;
    var month = Fecha.getMonth() + 1;&#xD;
    var day = Fecha.getDate();&#xD;
    strDate = String(year) + padStr(String(month), 2, '0', STR_PAD_LEFT) + padStr(String(day), 2, '0', STR_PAD_LEFT); &#xD;
&#xD;
    return strDate;&#xD;
}&#xD;
&#xD;
function parseTimeToComissionDate(gTime) {&#xD;
    var date = new Date();&#xD;
    date.setTime(gTime);&#xD;
    var strDate = parseDateToStringComission(date);&#xD;
    return strDate;&#xD;
}&#xD;
&#xD;
function parseTimeToCBSDate(gTime) {&#xD;
    var date = new Date();&#xD;
    date.setTime(gTime);&#xD;
    var strDate = parseDateToStringCBS(date);&#xD;
    return strDate;&#xD;
}&#xD;
&#xD;
//Convierte un valor texto a al formato yyyyMMddhhmiss&#xD;
function parseDateToStringCBS(date){&#xD;
    var day = padStr(String(date.getDate()), 2, '0', STR_PAD_LEFT);&#xD;
    var year = date.getFullYear();&#xD;
    var month = date.getMonth() + 1;&#xD;
    month = padStr(String(month), 2, '0', STR_PAD_LEFT);&#xD;
    var hours = padStr(String(date.getHours()), 2, '0', STR_PAD_LEFT);&#xD;
    var minutes = padStr(String(date.getMinutes()), 2, '0', STR_PAD_LEFT);&#xD;
    var seconds = padStr(String(date.getSeconds()), 2, '0', STR_PAD_LEFT);&#xD;
    var format = year + '' + month + '' + day + '' + hours + '' + minutes + '' + seconds;&#xD;
&#xD;
    return format;&#xD;
}&#xD;
&#xD;
//Convierte un Time a un string de Date en formato yyyyMMddhhmiss&#xD;
function parseTimeToDHDate(gTime) {&#xD;
    var date = new Date();&#xD;
    date.setTime(gTime);&#xD;
    var strDate = parseDateToStringDH(date);&#xD;
    return strDate;&#xD;
}&#xD;
&#xD;
//Convierte un valor texto a al formato ddMMyyyy HH:mm:ss&#xD;
function parseDateToStringComission(date){&#xD;
    var day = padStr(String(date.getDate()), 2, '0', STR_PAD_LEFT);&#xD;
    var year = date.getFullYear();&#xD;
    var month = date.getMonth() + 1;&#xD;
    month = padStr(String(month), 2, '0', STR_PAD_LEFT);&#xD;
    var hours = padStr(String(date.getHours()), 2, '0', STR_PAD_LEFT);&#xD;
    var minutes = padStr(String(date.getMinutes()), 2, '0', STR_PAD_LEFT);&#xD;
    var seconds = padStr(String(date.getSeconds()), 2, '0', STR_PAD_LEFT);&#xD;
    var format = day + '' + month + '' + year + ' ' + hours + ':' + minutes + ':' + seconds;&#xD;
&#xD;
    return format;&#xD;
}&#xD;
&#xD;
//Convierte un valor texto a al formato yyyyMMddhhmiss&#xD;
function parseDateToStringDH(date){&#xD;
    var day = padStr(String(date.getDate()), 2, '0', STR_PAD_LEFT);&#xD;
    var year = date.getFullYear();&#xD;
    var month = date.getMonth() + 1;&#xD;
    month = padStr(String(month), 2, '0', STR_PAD_LEFT);&#xD;
    var hours = padStr(String(date.getHours()), 2, '0', STR_PAD_LEFT);&#xD;
    var minutes = padStr(String(date.getMinutes()), 2, '0', STR_PAD_LEFT);&#xD;
    var seconds = padStr(String(date.getSeconds()), 2, '0', STR_PAD_LEFT);&#xD;
    var format = year + '' + month + '' + day + '' + hours + '' + minutes + '' + seconds;&#xD;
&#xD;
    return format;&#xD;
}&#xD;
&#xD;
//Convierte un Time a un string de Date en formato yyyy-MM-ddThh:mm:ss.000-06:00&#xD;
function parseTimeToDate(gTime, timeZone) {&#xD;
    var date = new Date();&#xD;
    date.setTime(gTime);&#xD;
    var strDate = parseDateToString(date);&#xD;
    strDate = timeZone ? strDate.replace(' ','T') + '.000-06:00' : strDate.replace(' ','T');    &#xD;
    return strDate;&#xD;
}&#xD;
&#xD;
//Convierte un Time a un string de Date en formato yyyy-MM-dd hh:mm:ss&#xD;
function parseTimeToDateGeneric(gTime) {&#xD;
    var date = new Date();&#xD;
    date.setTime(gTime);&#xD;
    var strDate = parseDateToString(date);  &#xD;
    return strDate;&#xD;
}&#xD;
&#xD;
//Convierte un Time a un string de Date en formato dd/MM/yyyy hh:mm:ss&#xD;
function parseTimeToScheduleDate(gTime) {&#xD;
    var date = new Date();&#xD;
    date.setTime(gTime);&#xD;
    var strDate = parseDateToStringSchedule(date);&#xD;
    return strDate;&#xD;
}&#xD;
&#xD;
//Transforma un string con formato de fecha a un objeto Date&#xD;
function parseStringToDate (strDate) {&#xD;
    strDate = strDate.replace(/\D/g,' ');&#xD;
    var dateArray = strDate.split(' ');&#xD;
    var year = dateArray[0];&#xD;
    var month = dateArray[1] - 1;&#xD;
    var day = dateArray[2];&#xD;
    var hours = dateArray[3];&#xD;
    var minutes = dateArray[4];&#xD;
    var seconds = dateArray[5];&#xD;
&#xD;
    return new Date(year,month,day,hours,minutes,seconds);&#xD;
}&#xD;
&#xD;
//Convierte un valor texto a al formato yyyy-MM-dd hh:mm:ss&#xD;
function parseDateToString(date){&#xD;
    var day = padStr(String(date.getDate()), 2, '0', STR_PAD_LEFT);&#xD;
    var year = date.getFullYear();&#xD;
    var month = date.getMonth() + 1;&#xD;
    month = padStr(String(month), 2, '0', STR_PAD_LEFT);&#xD;
    var hours = padStr(String(date.getHours()), 2, '0', STR_PAD_LEFT);&#xD;
    var minutes = padStr(String(date.getMinutes()), 2, '0', STR_PAD_LEFT);&#xD;
    var seconds = padStr(String(date.getSeconds()), 2, '0', STR_PAD_LEFT);&#xD;
    var format = year + '-' + month + '-' + day + ' ' + hours + ':' + minutes + ':' + seconds;&#xD;
&#xD;
    return format;&#xD;
}&#xD;
&#xD;
//Convierte un valor texto a al formato dd/MM/yyyy hh:mm:ss&#xD;
function parseDateToStringSchedule(date){&#xD;
    var day = padStr(String(date.getDate()), 2, '0', STR_PAD_LEFT);&#xD;
    var year = date.getFullYear();&#xD;
    var month = date.getMonth() + 1;&#xD;
    month = padStr(String(month), 2, '0', STR_PAD_LEFT);&#xD;
    var hours = padStr(String(date.getHours()), 2, '0', STR_PAD_LEFT);&#xD;
    var minutes = padStr(String(date.getMinutes()), 2, '0', STR_PAD_LEFT);&#xD;
    var seconds = padStr(String(date.getSeconds()), 2, '0', STR_PAD_LEFT);&#xD;
    var format = day + '/' + month + '/' + year + ' ' + hours + ':' + minutes + ':' + seconds;&#xD;
&#xD;
    return format;&#xD;
}</bpmn2:script>
    </bpmn2:scriptTask>
    <bpmn2:exclusiveGateway id="ExclusiveGateway_2" name="Missing Params" default="SequenceFlow_6">
      <bpmn2:incoming>SequenceFlow_4</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_3</bpmn2:outgoing>
      <bpmn2:outgoing>SequenceFlow_6</bpmn2:outgoing>
    </bpmn2:exclusiveGateway>
    <bpmn2:scriptTask id="ScriptTask_4" name="parametros">
      <bpmn2:incoming>SequenceFlow_3</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_5</bpmn2:outgoing>
      <bpmn2:script>var BPMN_RESPONSE_CODE = '101';&#xD;
var BPMN_RESPONSE_MESSAGE = strMissingParam + vParams;</bpmn2:script>
    </bpmn2:scriptTask>
    <bpmn2:sequenceFlow id="SequenceFlow_3" sourceRef="ExclusiveGateway_2" targetRef="ScriptTask_4">
      <bpmn2:conditionExpression xsi:type="bpmn2:tFormalExpression" id="FormalExpression_10">vMissingParam</bpmn2:conditionExpression>
    </bpmn2:sequenceFlow>
    <bpmn2:sequenceFlow id="SequenceFlow_4" sourceRef="ScriptTask_2" targetRef="ExclusiveGateway_2"/>
    <bpmn2:sequenceFlow id="SequenceFlow_5" sourceRef="ScriptTask_4" targetRef="EndEvent_1"/>
    <bpmn2:sequenceFlow id="SequenceFlow_6" sourceRef="ExclusiveGateway_2" targetRef="ServiceTask_2"/>
    <bpmn2:scriptTask id="ScriptTask_5" name="processInfo">
      <bpmn2:incoming>SequenceFlow_11</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_8</bpmn2:outgoing>
      <bpmn2:script>var vPackageBalance = 'C_Internet_Pack';

var walletJson;

var packageWallet;

var vServiceName = '';

var vQuotaInitVal = '';

var vQuotaConsumption = '';

var vQuotaBalance = '';

var vQuotaLevel = '';

var vNextResetTime = '00:00:00';

var vQuotaName = '';

var vServiceStrtTime = '';

var vServiceEndTime = '';

var packageInstance;

var foundHist = false;

var consumptionPcntg = 100;



if(typeof vFreeUnitWallets != 'undefined'){

    walletJson = getWalletJSON(vFreeUnitWallets);

    

    if(typeof(walletJson) != 'undefined'){


        packageWallet = getWalletByType(vPackageBalance, walletJson);

        

        packageInstance = getInstanceByOfferingPchsSeq(offeringId, purchaseSeq, packageWallet.FreeUnitItemDetail);
        

         
        

        if(typeof packageInstance != 'undefined'){

            foundHist = true;

            

            vServiceName = packageInstance.FreeUnitOrigin.OfferingKey.OfferingID;

            vQuotaInitVal = packageInstance.InitialAmount;

            vQuotaBalance = packageInstance.CurrentAmount;

            vQuotaConsumption = Math.abs(new Number(vQuotaInitVal) - new Number(vQuotaBalance)).toFixed(0);

            vQuotaName = 'N/A';//vPackageBalance + ' - ' + packageInstance.FreeUnitInstanceID;

            vServiceStrtTime = getCbsDateStr(packageInstance.EffectiveTime);

            vServiceEndTime = getCbsDateStr(packageInstance.ExpireTime);

            

            consumptionPcntg = (vQuotaConsumption / new Number(vQuotaInitVal)) * 100;

            

            if(consumptionPcntg >= 80 &amp;&amp; consumptionPcntg &lt; 100){

                vQuotaLevel = '1';

            } else if(consumptionPcntg >= 100){

                vQuotaLevel = '5';

            } else {

                vQuotaLevel = '0';

            }

        }

    }

}


function getInstanceByOfferingPchsSeq(offering, pchsSeq, walletObj){
    var instanceObj;
    var tmpOffering;
    var tmpPchsSeq;

    if(typeof(walletObj) != 'undefined'){
        
        if(walletObj instanceof Array) {
            for(var i = 0; i &lt; walletObj.length; i++){    
               if (typeof(walletObj[i].FreeUnitOrigin) != 'undefined') {

                    tmpOffering = walletObj[i].FreeUnitOrigin.OfferingKey.OfferingID;
                    tmpPchsSeq = walletObj[i].FreeUnitOrigin.OfferingKey.PurchaseSeq;
                
                    if(offering == tmpOffering &amp;&amp; pchsSeq == tmpPchsSeq){
                        instanceObj = walletObj[i];
                        break;
                    }
                }
            }
        } else {
            if (typeof(walletObj.FreeUnitOrigin) != 'undefined') {
                tmpOffering = walletObj.FreeUnitOrigin.OfferingKey.OfferingID;
                tmpPchsSeq = walletObj.FreeUnitOrigin.OfferingKey.PurchaseSeq;
                
                if(offering == tmpOffering &amp;&amp; pchsSeq == tmpPchsSeq){
                    instanceObj = walletObj;
                }
            }
        }
    }

    return instanceObj;
}


function getCbsDateStr(cbsDate){

//20161012000000

    var vYear = cbsDate.substring(0, 4);

    var vMonth = cbsDate.substring(4, 6);

    var vDay = cbsDate.substring(6, 8);

    var vHours = cbsDate.substring(8, 10);

    var vMinutes = cbsDate.substring(10, 12);

    var vSeconds = cbsDate.substring(12, 14);

    

    return  padStr(vMonth, 2, '0', STR_PAD_LEFT) + '-' + padStr(vDay, 2, '0', STR_PAD_LEFT) + '-' + padStr(vYear, 2, '0', STR_PAD_LEFT) + ' ' + padStr(vHours, 2, '0', STR_PAD_LEFT) + ':' + padStr(vMinutes, 2, '0', STR_PAD_LEFT) + ':' + padStr(vSeconds, 2, '0', STR_PAD_LEFT);

}</bpmn2:script>
    </bpmn2:scriptTask>
    <bpmn2:sequenceFlow id="SequenceFlow_7" sourceRef="ServiceTask_2" targetRef="ScriptTask_9"/>
    <bpmn2:serviceTask id="ServiceTask_4" name="ExecuteOrderTask" implementation="##WebService">
      <bpmn2:incoming>SequenceFlow_12</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_9</bpmn2:outgoing>
      <bpmn2:ioSpecification id="InputOutputSpecification_5">
        <bpmn2:dataInput id="DataInput_12" name="CHANNEL_ID"/>
        <bpmn2:dataInput id="DataInput_13" name="EXTERNAL_TRANSACTION_ID"/>
        <bpmn2:dataInput id="DataInput_14" name="COMMENT"/>
        <bpmn2:dataInput id="DataInput_15" name="SUBSCRIBER_ID"/>
        <bpmn2:dataInput id="DataInput_16" name="PRODUCT_ID"/>
        <bpmn2:dataInput id="DataInput_17" name="ORDER_TYPE"/>
        <bpmn2:dataInput id="DataInput_18" name="ExecuteOrderTask__failOverPolicy"/>
        <bpmn2:dataInput id="DataInput_19" name="ExecuteOrderTask__retryPolicyNumber"/>
        <bpmn2:dataInput id="DataInput_20" name="SERVICE_NAME"/>
        <bpmn2:dataInput id="DataInput_21" name="QUOTA_INITIAL_VALUE"/>
        <bpmn2:dataInput id="DataInput_22" name="QUOTA_CONSUMPTION"/>
        <bpmn2:dataInput id="DataInput_23" name="QUOTA_BALANCE"/>
        <bpmn2:dataInput id="DataInput_24" name="QUOTA_LEVEL"/>
        <bpmn2:dataInput id="DataInput_25" name="QUOTA_NAME"/>
        <bpmn2:dataInput id="DataInput_26" name="SERVICE_START_TIME"/>
        <bpmn2:dataInput id="DataInput_27" name="SERVICE_END_TIME"/>
        <bpmn2:inputSet id="InputSet_6" name="Input Set 44">
          <bpmn2:dataInputRefs>DataInput_12</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_13</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_14</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_15</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_16</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_17</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_18</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_19</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_20</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_21</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_22</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_23</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_24</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_25</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_26</bpmn2:dataInputRefs>
          <bpmn2:dataInputRefs>DataInput_27</bpmn2:dataInputRefs>
        </bpmn2:inputSet>
        <bpmn2:outputSet id="OutputSet_6" name="Output Set 44"/>
      </bpmn2:ioSpecification>
      <bpmn2:dataInputAssociation id="DataInputAssociation_12">
        <bpmn2:targetRef>DataInput_12</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_14">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_30">channelId</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_31">DataInput_108</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_13">
        <bpmn2:targetRef>DataInput_13</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_15">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_32">transactionId</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_33">DataInput_115</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_14">
        <bpmn2:targetRef>DataInput_14</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_16">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_34">'Consumption Trigger Sim'</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_35">DataInput_119</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_15">
        <bpmn2:targetRef>DataInput_15</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_17">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_36">subscriberId</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_37">DataInput_133</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_16">
        <bpmn2:targetRef>DataInput_16</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_18">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_38">'483'</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_39">DataInput_143</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_17">
        <bpmn2:targetRef>DataInput_17</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_19">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_40">'TRANSFER'</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_41">DataInput_178</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_18">
        <bpmn2:targetRef>DataInput_18</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_20">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_42">false</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_43">DataInput_183</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_19">
        <bpmn2:targetRef>DataInput_19</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_21">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_44">0</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_45">DataInput_79</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_20">
        <bpmn2:targetRef>DataInput_20</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_22">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_51">vServiceName</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_49">DataInput_20</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_21">
        <bpmn2:targetRef>DataInput_21</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_23">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_54">vQuotaInitVal</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_52">DataInput_21</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_22">
        <bpmn2:targetRef>DataInput_22</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_24">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_57">vQuotaConsumption</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_55">DataInput_22</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_23">
        <bpmn2:targetRef>DataInput_23</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_25">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_60">vQuotaBalance</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_58">DataInput_23</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_24">
        <bpmn2:targetRef>DataInput_24</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_26">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_63">vQuotaLevel</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_61">DataInput_24</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_25">
        <bpmn2:targetRef>DataInput_25</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_27">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_66">vQuotaName</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_64">DataInput_25</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_26">
        <bpmn2:targetRef>DataInput_26</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_28">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_69">vServiceStrtTime</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_67">DataInput_26</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
      <bpmn2:dataInputAssociation id="DataInputAssociation_27">
        <bpmn2:targetRef>DataInput_27</bpmn2:targetRef>
        <bpmn2:assignment id="Assignment_29">
          <bpmn2:from xsi:type="bpmn2:tFormalExpression" id="FormalExpression_72">vServiceEndTime</bpmn2:from>
          <bpmn2:to xsi:type="bpmn2:tFormalExpression" id="FormalExpression_70">DataInput_27</bpmn2:to>
        </bpmn2:assignment>
      </bpmn2:dataInputAssociation>
    </bpmn2:serviceTask>
    <bpmn2:sequenceFlow id="SequenceFlow_8" sourceRef="ScriptTask_5" targetRef="ExclusiveGateway_3"/>
    <bpmn2:scriptTask id="ScriptTask_7" name="setResponse">
      <bpmn2:incoming>SequenceFlow_9</bpmn2:incoming>
      <bpmn2:incoming>SequenceFlow_13</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_10</bpmn2:outgoing>
      <bpmn2:script>var BPMN_RESPONSE_CODE = '0';&#xD;
var BPMN_RESPONSE_MESSAGE = foundHist ? 'Operation Successful' : 'Instance not found';</bpmn2:script>
    </bpmn2:scriptTask>
    <bpmn2:sequenceFlow id="SequenceFlow_9" sourceRef="ServiceTask_4" targetRef="ScriptTask_7"/>
    <bpmn2:endEvent id="EndEvent_2" name="End Event 2">
      <bpmn2:incoming>SequenceFlow_10</bpmn2:incoming>
    </bpmn2:endEvent>
    <bpmn2:sequenceFlow id="SequenceFlow_10" sourceRef="ScriptTask_7" targetRef="EndEvent_2"/>
    <bpmn2:scriptTask id="ScriptTask_9" name="DataFunctions">
      <bpmn2:incoming>SequenceFlow_7</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_11</bpmn2:outgoing>
      <bpmn2:script>function getWalletJSON(strJson){&#xD;
    var vExpr = '([b,c,s]+|[t*,n,s,(0-9)*]+|[v,(0-9)*]+):';&#xD;
    var vNumExpr = '(&quot;[a-z]+&quot;:)([0-9]+)(\s*,|}|$)';&#xD;
    var regEx;&#xD;
    var numRegExp;&#xD;
    var tmpJson = '';&#xD;
&#xD;
    if(typeof REG_EXP != 'undefined'){&#xD;
        vExpr = REG_EXP;&#xD;
    }&#xD;
    &#xD;
    regEx = new RegExp(vExpr, 'gi');&#xD;
    numRegExp = new RegExp(vNumExpr, 'gmi');&#xD;
    tmpJson = strJson.replace(regEx, '');&#xD;
    tmpJson = tmpJson.replace(numRegExp, '$1&quot;$2&quot;$3');&#xD;
    &#xD;
    return JSON.parse(tmpJson);&#xD;
}&#xD;
&#xD;
function getWalletByType(strWalletName, walletJson){&#xD;
    var walletObj;&#xD;
    var freeUnits = walletJson.QueryFreeUnitResultMsg.QueryFreeUnitResult.FreeUnitItem;&#xD;
    var vItem;&#xD;
    &#xD;
    if(typeof(freeUnits) != 'undefined'){&#xD;
        if(freeUnits instanceof Array){&#xD;
            for(var i = 0; i &lt; freeUnits.length; i++){&#xD;
                vItem = freeUnits[i];&#xD;
                if(vItem.FreeUnitType == strWalletName){&#xD;
                    walletObj = vItem;&#xD;
                    &#xD;
                    break;&#xD;
                }&#xD;
            }&#xD;
        } else {&#xD;
            if(freeUnits.FreeUnitType == strWalletName){&#xD;
                walletObj = freeUnits;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    &#xD;
    return walletObj;&#xD;
}&#xD;
&#xD;
function trimExhaustedInstances(instances){&#xD;
    var tmpInstances = new Array();&#xD;
    &#xD;
    if(instances instanceof Array){&#xD;
        for(var i = 0; i &lt; instances.length; i++){&#xD;
            if(new Number(instances[i].CurrentAmount) > 0){&#xD;
                tmpInstances.push(instances[i]);&#xD;
            }&#xD;
        }&#xD;
    } else {&#xD;
        if(new Number(instances.CurrentAmount) > 0){&#xD;
            tmpInstances.push(instances);&#xD;
        }&#xD;
    }&#xD;
    &#xD;
    return tmpInstances;&#xD;
}&#xD;
&#xD;
function getSortedInstances(wallet){&#xD;
    var sortedInstances = new Array();&#xD;
    var itemDetail;&#xD;
    var tmpInstances = trimExhaustedInstances(wallet.FreeUnitItemDetail);&#xD;
    &#xD;
    if(tmpInstances instanceof Array){&#xD;
        itemDetail = tmpInstances;&#xD;
        sortedInstances = quickSort(itemDetail, 0, (itemDetail.length - 1));&#xD;
    } else{&#xD;
        sortedInstances.push(tmpInstances);&#xD;
    }&#xD;
    &#xD;
    return sortedInstances;&#xD;
}&#xD;
&#xD;
function swap(items, firstIdx, secondIdx){&#xD;
    var tmp = items[firstIdx];&#xD;
    items[firstIdx] = items[secondIdx];&#xD;
    items[secondIdx] = tmp;&#xD;
}&#xD;
&#xD;
function partition(items, left, right){&#xD;
    var pivot = items[Math.floor((right + left) / 2)];&#xD;
    var i = left;&#xD;
    var j = right;&#xD;
    &#xD;
    while(i &lt;= j){&#xD;
        while(new Number(items[i].ExpireTime) > new Number(pivot.ExpireTime)){&#xD;
            i++;&#xD;
        }&#xD;
        while(new Number(items[j].ExpireTime) &lt; new Number(pivot.ExpireTime)){&#xD;
            j--;&#xD;
        }&#xD;
        &#xD;
        if(i &lt;= j){&#xD;
            swap(items, i, j);&#xD;
            i++;&#xD;
            j--;&#xD;
        }&#xD;
    }&#xD;
    &#xD;
    return i;&#xD;
}&#xD;
&#xD;
function quickSort(items, left, right){&#xD;
    var idx;&#xD;
    &#xD;
    if(items.length > 1){&#xD;
        idx = partition(items, left, right);&#xD;
        &#xD;
        if(left &lt; (idx - 1)){&#xD;
            quickSort(items, left, (idx - 1));&#xD;
        }&#xD;
        &#xD;
        if(idx &lt; right){&#xD;
            quickSort(items, idx, right);&#xD;
        }&#xD;
    }&#xD;
    return items;&#xD;
}&#xD;
&#xD;
function getCbsDate(cbsDate){&#xD;
    var vYear = cbsDate.substring(0, 4);&#xD;
    var vMonth = new Number(cbsDate.substring(4, 6)) - 1;&#xD;
    var vDay = cbsDate.substring(6, 8);&#xD;
    var vHours = cbsDate.substring(8, 10);&#xD;
    var vMinutes = cbsDate.substring(10, 12);&#xD;
    var vSeconds = cbsDate.substring(12, 14);&#xD;
    &#xD;
    return new Date(vYear,vMonth,vDay,vHours,vMinutes,vSeconds);&#xD;
}</bpmn2:script>
    </bpmn2:scriptTask>
    <bpmn2:sequenceFlow id="SequenceFlow_11" sourceRef="ScriptTask_9" targetRef="ScriptTask_5"/>
    <bpmn2:exclusiveGateway id="ExclusiveGateway_3" name="foundInstance">
      <bpmn2:incoming>SequenceFlow_8</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_12</bpmn2:outgoing>
      <bpmn2:outgoing>SequenceFlow_13</bpmn2:outgoing>
    </bpmn2:exclusiveGateway>
    <bpmn2:sequenceFlow id="SequenceFlow_12" sourceRef="ExclusiveGateway_3" targetRef="ServiceTask_4">
      <bpmn2:conditionExpression xsi:type="bpmn2:tFormalExpression" id="FormalExpression_47">foundHist</bpmn2:conditionExpression>
    </bpmn2:sequenceFlow>
    <bpmn2:sequenceFlow id="SequenceFlow_13" sourceRef="ExclusiveGateway_3" targetRef="ScriptTask_7">
      <bpmn2:conditionExpression xsi:type="bpmn2:tFormalExpression" id="FormalExpression_48">!foundHist</bpmn2:conditionExpression>
    </bpmn2:sequenceFlow>
  </bpmn2:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1" name="Default Process Diagram">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="PaquetesInternet-Deactivate">
      <bpmndi:BPMNShape id="BPMNShape_1" bpmnElement="StartEvent_1">
        <dc:Bounds height="36.0" width="36.0" x="100.0" y="100.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_1" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="68.0" x="84.0" y="136.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_2" bpmnElement="EndEvent_1">
        <dc:Bounds height="36.0" width="36.0" x="721.0" y="340.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_3" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="65.0" x="707.0" y="376.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ServiceTask_1" bpmnElement="ServiceTask_2">
        <dc:Bounds height="50.0" width="110.0" x="445.0" y="202.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_4" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="106.0" x="447.0" y="219.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ScriptTask_1" bpmnElement="ScriptTask_2">
        <dc:Bounds height="50.0" width="110.0" x="228.0" y="93.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_5" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="54.0" x="256.0" y="110.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ExclusiveGateway_1" bpmnElement="ExclusiveGateway_2" isMarkerVisible="true">
        <dc:Bounds height="50.0" width="50.0" x="475.0" y="93.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_6" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="30.0" width="49.0" x="475.0" y="143.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ScriptTask_2" bpmnElement="ScriptTask_4">
        <dc:Bounds height="50.0" width="110.0" x="684.0" y="93.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_7" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="64.0" x="707.0" y="110.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ScriptTask_3" bpmnElement="ScriptTask_5">
        <dc:Bounds height="50.0" width="110.0" x="445.0" y="392.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_12" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="65.0" x="467.0" y="409.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ServiceTask_2" bpmnElement="ServiceTask_4">
        <dc:Bounds height="50.0" width="110.0" x="256.0" y="600.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_14" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="101.0" x="260.0" y="617.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ScriptTask_4" bpmnElement="ScriptTask_7">
        <dc:Bounds height="50.0" width="110.0" x="445.0" y="600.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_16" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="75.0" x="462.0" y="617.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_EndEvent_1" bpmnElement="EndEvent_2">
        <dc:Bounds height="36.0" width="36.0" x="482.0" y="720.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_18" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="65.0" x="468.0" y="756.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ScriptTask_5" bpmnElement="ScriptTask_9">
        <dc:Bounds height="50.0" width="110.0" x="445.0" y="291.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_20" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="80.0" x="460.0" y="308.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_ExclusiveGateway_2" bpmnElement="ExclusiveGateway_3" isMarkerVisible="true">
        <dc:Bounds height="50.0" width="50.0" x="475.0" y="490.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_22" labelStyle="BPMNLabelStyle_1">
          <dc:Bounds height="15.0" width="78.0" x="461.0" y="540.0"/>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_1" bpmnElement="SequenceFlow_1" sourceElement="BPMNShape_1" targetElement="BPMNShape_ScriptTask_1">
        <di:waypoint xsi:type="dc:Point" x="136.0" y="118.0"/>
        <di:waypoint xsi:type="dc:Point" x="228.0" y="118.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_2" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_2" bpmnElement="SequenceFlow_3" sourceElement="BPMNShape_ExclusiveGateway_1" targetElement="BPMNShape_ScriptTask_2">
        <di:waypoint xsi:type="dc:Point" x="525.0" y="118.0"/>
        <di:waypoint xsi:type="dc:Point" x="684.0" y="118.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_8" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_3" bpmnElement="SequenceFlow_4" sourceElement="BPMNShape_ScriptTask_1" targetElement="BPMNShape_ExclusiveGateway_1">
        <di:waypoint xsi:type="dc:Point" x="338.0" y="118.0"/>
        <di:waypoint xsi:type="dc:Point" x="475.0" y="118.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_9" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_4" bpmnElement="SequenceFlow_5" sourceElement="BPMNShape_ScriptTask_2" targetElement="BPMNShape_2">
        <di:waypoint xsi:type="dc:Point" x="739.0" y="143.0"/>
        <di:waypoint xsi:type="dc:Point" x="739.0" y="340.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_10" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_5" bpmnElement="SequenceFlow_6" sourceElement="BPMNShape_ExclusiveGateway_1" targetElement="BPMNShape_ServiceTask_1">
        <di:waypoint xsi:type="dc:Point" x="500.0" y="143.0"/>
        <di:waypoint xsi:type="dc:Point" x="500.0" y="202.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_11" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_6" bpmnElement="SequenceFlow_7" sourceElement="BPMNShape_ServiceTask_1" targetElement="BPMNShape_ScriptTask_5">
        <di:waypoint xsi:type="dc:Point" x="500.0" y="252.0"/>
        <di:waypoint xsi:type="dc:Point" x="500.0" y="291.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_13" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_7" bpmnElement="SequenceFlow_8" sourceElement="BPMNShape_ScriptTask_3" targetElement="BPMNShape_ExclusiveGateway_2">
        <di:waypoint xsi:type="dc:Point" x="500.0" y="442.0"/>
        <di:waypoint xsi:type="dc:Point" x="500.0" y="490.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_15" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_8" bpmnElement="SequenceFlow_9" sourceElement="BPMNShape_ServiceTask_2" targetElement="BPMNShape_ScriptTask_4">
        <di:waypoint xsi:type="dc:Point" x="366.0" y="625.0"/>
        <di:waypoint xsi:type="dc:Point" x="445.0" y="625.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_17" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_9" bpmnElement="SequenceFlow_10" sourceElement="BPMNShape_ScriptTask_4" targetElement="BPMNShape_EndEvent_1">
        <di:waypoint xsi:type="dc:Point" x="500.0" y="650.0"/>
        <di:waypoint xsi:type="dc:Point" x="500.0" y="720.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_19" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_10" bpmnElement="SequenceFlow_11" sourceElement="BPMNShape_ScriptTask_5" targetElement="BPMNShape_ScriptTask_3">
        <di:waypoint xsi:type="dc:Point" x="500.0" y="341.0"/>
        <di:waypoint xsi:type="dc:Point" x="500.0" y="392.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_21" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_11" bpmnElement="SequenceFlow_12" sourceElement="BPMNShape_ExclusiveGateway_2" targetElement="BPMNShape_ServiceTask_2">
        <di:waypoint xsi:type="dc:Point" x="475.0" y="515.0"/>
        <di:waypoint xsi:type="dc:Point" x="311.0" y="515.0"/>
        <di:waypoint xsi:type="dc:Point" x="311.0" y="600.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_23" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_SequenceFlow_12" bpmnElement="SequenceFlow_13" sourceElement="BPMNShape_ExclusiveGateway_2" targetElement="BPMNShape_ScriptTask_4">
        <di:waypoint xsi:type="dc:Point" x="500.0" y="540.0"/>
        <di:waypoint xsi:type="dc:Point" x="500.0" y="600.0"/>
        <bpmndi:BPMNLabel id="BPMNLabel_24" labelStyle="BPMNLabelStyle_1"/>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
    <bpmndi:BPMNLabelStyle id="BPMNLabelStyle_1">
      <dc:Font name="arial" size="9.0"/>
    </bpmndi:BPMNLabelStyle>
  </bpmndi:BPMNDiagram>
</bpmn2:definitions>